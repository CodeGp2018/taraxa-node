// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: proto/transaction.proto

#include "proto/transaction.pb.h"
#include "proto/transaction.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace taraxa_ledger {

static const char* TaraxaLedgerService_method_names[] = {
  "/taraxa_ledger.TaraxaLedgerService/SendTransaction",
  "/taraxa_ledger.TaraxaLedgerService/GetTransaction",
};

std::unique_ptr< TaraxaLedgerService::Stub> TaraxaLedgerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< TaraxaLedgerService::Stub> stub(new TaraxaLedgerService::Stub(channel));
  return stub;
}

TaraxaLedgerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_SendTransaction_(TaraxaLedgerService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTransaction_(TaraxaLedgerService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status TaraxaLedgerService::Stub::SendTransaction(::grpc::ClientContext* context, const ::taraxa_ledger::Transaction& request, ::taraxa_ledger::SendTransactionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SendTransaction_, context, request, response);
}

void TaraxaLedgerService::Stub::experimental_async::SendTransaction(::grpc::ClientContext* context, const ::taraxa_ledger::Transaction* request, ::taraxa_ledger::SendTransactionResponse* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SendTransaction_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::taraxa_ledger::SendTransactionResponse>* TaraxaLedgerService::Stub::AsyncSendTransactionRaw(::grpc::ClientContext* context, const ::taraxa_ledger::Transaction& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::taraxa_ledger::SendTransactionResponse>::Create(channel_.get(), cq, rpcmethod_SendTransaction_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::taraxa_ledger::SendTransactionResponse>* TaraxaLedgerService::Stub::PrepareAsyncSendTransactionRaw(::grpc::ClientContext* context, const ::taraxa_ledger::Transaction& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::taraxa_ledger::SendTransactionResponse>::Create(channel_.get(), cq, rpcmethod_SendTransaction_, context, request, false);
}

::grpc::Status TaraxaLedgerService::Stub::GetTransaction(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::taraxa_ledger::Transaction* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetTransaction_, context, request, response);
}

void TaraxaLedgerService::Stub::experimental_async::GetTransaction(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::taraxa_ledger::Transaction* response, std::function<void(::grpc::Status)> f) {
  return ::grpc::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetTransaction_, context, request, response, std::move(f));
}

::grpc::ClientAsyncResponseReader< ::taraxa_ledger::Transaction>* TaraxaLedgerService::Stub::AsyncGetTransactionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::taraxa_ledger::Transaction>::Create(channel_.get(), cq, rpcmethod_GetTransaction_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::taraxa_ledger::Transaction>* TaraxaLedgerService::Stub::PrepareAsyncGetTransactionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::taraxa_ledger::Transaction>::Create(channel_.get(), cq, rpcmethod_GetTransaction_, context, request, false);
}

TaraxaLedgerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TaraxaLedgerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TaraxaLedgerService::Service, ::taraxa_ledger::Transaction, ::taraxa_ledger::SendTransactionResponse>(
          std::mem_fn(&TaraxaLedgerService::Service::SendTransaction), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      TaraxaLedgerService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< TaraxaLedgerService::Service, ::google::protobuf::Empty, ::taraxa_ledger::Transaction>(
          std::mem_fn(&TaraxaLedgerService::Service::GetTransaction), this)));
}

TaraxaLedgerService::Service::~Service() {
}

::grpc::Status TaraxaLedgerService::Service::SendTransaction(::grpc::ServerContext* context, const ::taraxa_ledger::Transaction* request, ::taraxa_ledger::SendTransactionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status TaraxaLedgerService::Service::GetTransaction(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::taraxa_ledger::Transaction* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace taraxa_ledger

