// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/transaction.proto

#ifndef PROTOBUF_INCLUDED_proto_2ftransaction_2eproto
#define PROTOBUF_INCLUDED_proto_2ftransaction_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftransaction_2eproto 

namespace protobuf_proto_2ftransaction_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2ftransaction_2eproto
namespace taraxa_ledger {
class GrpcTransaction;
class GrpcTransactionDefaultTypeInternal;
extern GrpcTransactionDefaultTypeInternal _GrpcTransaction_default_instance_;
class SendGrpcTransactionResponse;
class SendGrpcTransactionResponseDefaultTypeInternal;
extern SendGrpcTransactionResponseDefaultTypeInternal _SendGrpcTransactionResponse_default_instance_;
}  // namespace taraxa_ledger
namespace google {
namespace protobuf {
template<> ::taraxa_ledger::GrpcTransaction* Arena::CreateMaybeMessage<::taraxa_ledger::GrpcTransaction>(Arena*);
template<> ::taraxa_ledger::SendGrpcTransactionResponse* Arena::CreateMaybeMessage<::taraxa_ledger::SendGrpcTransactionResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace taraxa_ledger {

// ===================================================================

class GrpcTransaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_ledger.GrpcTransaction) */ {
 public:
  GrpcTransaction();
  virtual ~GrpcTransaction();

  GrpcTransaction(const GrpcTransaction& from);

  inline GrpcTransaction& operator=(const GrpcTransaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GrpcTransaction(GrpcTransaction&& from) noexcept
    : GrpcTransaction() {
    *this = ::std::move(from);
  }

  inline GrpcTransaction& operator=(GrpcTransaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GrpcTransaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GrpcTransaction* internal_default_instance() {
    return reinterpret_cast<const GrpcTransaction*>(
               &_GrpcTransaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GrpcTransaction* other);
  friend void swap(GrpcTransaction& a, GrpcTransaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GrpcTransaction* New() const final {
    return CreateMaybeMessage<GrpcTransaction>(NULL);
  }

  GrpcTransaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GrpcTransaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GrpcTransaction& from);
  void MergeFrom(const GrpcTransaction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GrpcTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nonce = 2;
  void clear_nonce();
  static const int kNonceFieldNumber = 2;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const char* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // string gas_price = 4;
  void clear_gas_price();
  static const int kGasPriceFieldNumber = 4;
  const ::std::string& gas_price() const;
  void set_gas_price(const ::std::string& value);
  #if LANG_CXX11
  void set_gas_price(::std::string&& value);
  #endif
  void set_gas_price(const char* value);
  void set_gas_price(const char* value, size_t size);
  ::std::string* mutable_gas_price();
  ::std::string* release_gas_price();
  void set_allocated_gas_price(::std::string* gas_price);

  // string gas = 5;
  void clear_gas();
  static const int kGasFieldNumber = 5;
  const ::std::string& gas() const;
  void set_gas(const ::std::string& value);
  #if LANG_CXX11
  void set_gas(::std::string&& value);
  #endif
  void set_gas(const char* value);
  void set_gas(const char* value, size_t size);
  ::std::string* mutable_gas();
  ::std::string* release_gas();
  void set_allocated_gas(::std::string* gas);

  // string receiver = 6;
  void clear_receiver();
  static const int kReceiverFieldNumber = 6;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  #if LANG_CXX11
  void set_receiver(::std::string&& value);
  #endif
  void set_receiver(const char* value);
  void set_receiver(const char* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // string signature = 7;
  void clear_signature();
  static const int kSignatureFieldNumber = 7;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // bytes data = 8;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:taraxa_ledger.GrpcTransaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr gas_price_;
  ::google::protobuf::internal::ArenaStringPtr gas_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftransaction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendGrpcTransactionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_ledger.SendGrpcTransactionResponse) */ {
 public:
  SendGrpcTransactionResponse();
  virtual ~SendGrpcTransactionResponse();

  SendGrpcTransactionResponse(const SendGrpcTransactionResponse& from);

  inline SendGrpcTransactionResponse& operator=(const SendGrpcTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendGrpcTransactionResponse(SendGrpcTransactionResponse&& from) noexcept
    : SendGrpcTransactionResponse() {
    *this = ::std::move(from);
  }

  inline SendGrpcTransactionResponse& operator=(SendGrpcTransactionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendGrpcTransactionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendGrpcTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const SendGrpcTransactionResponse*>(
               &_SendGrpcTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SendGrpcTransactionResponse* other);
  friend void swap(SendGrpcTransactionResponse& a, SendGrpcTransactionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendGrpcTransactionResponse* New() const final {
    return CreateMaybeMessage<SendGrpcTransactionResponse>(NULL);
  }

  SendGrpcTransactionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendGrpcTransactionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendGrpcTransactionResponse& from);
  void MergeFrom(const SendGrpcTransactionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendGrpcTransactionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:taraxa_ledger.SendGrpcTransactionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftransaction_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GrpcTransaction

// uint32 type = 1;
inline void GrpcTransaction::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 GrpcTransaction::type() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.type)
  return type_;
}
inline void GrpcTransaction::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.type)
}

// string nonce = 2;
inline void GrpcTransaction::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::nonce() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.nonce)
  return nonce_.GetNoArena();
}
inline void GrpcTransaction::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.nonce)
}
#if LANG_CXX11
inline void GrpcTransaction::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.nonce)
}
#endif
inline void GrpcTransaction::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.nonce)
}
inline void GrpcTransaction::set_nonce(const char* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.nonce)
}
inline ::std::string* GrpcTransaction::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_nonce() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.nonce)
}

// string value = 3;
inline void GrpcTransaction::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::value() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.value)
  return value_.GetNoArena();
}
inline void GrpcTransaction::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.value)
}
#if LANG_CXX11
inline void GrpcTransaction::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.value)
}
#endif
inline void GrpcTransaction::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.value)
}
inline void GrpcTransaction::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.value)
}
inline ::std::string* GrpcTransaction::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_value() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.value)
}

// string gas_price = 4;
inline void GrpcTransaction::clear_gas_price() {
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::gas_price() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.gas_price)
  return gas_price_.GetNoArena();
}
inline void GrpcTransaction::set_gas_price(const ::std::string& value) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.gas_price)
}
#if LANG_CXX11
inline void GrpcTransaction::set_gas_price(::std::string&& value) {
  
  gas_price_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.gas_price)
}
#endif
inline void GrpcTransaction::set_gas_price(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.gas_price)
}
inline void GrpcTransaction::set_gas_price(const char* value, size_t size) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.gas_price)
}
inline ::std::string* GrpcTransaction::mutable_gas_price() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.gas_price)
  return gas_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_gas_price() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.gas_price)
  
  return gas_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_gas_price(::std::string* gas_price) {
  if (gas_price != NULL) {
    
  } else {
    
  }
  gas_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas_price);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.gas_price)
}

// string gas = 5;
inline void GrpcTransaction::clear_gas() {
  gas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::gas() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.gas)
  return gas_.GetNoArena();
}
inline void GrpcTransaction::set_gas(const ::std::string& value) {
  
  gas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.gas)
}
#if LANG_CXX11
inline void GrpcTransaction::set_gas(::std::string&& value) {
  
  gas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.gas)
}
#endif
inline void GrpcTransaction::set_gas(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.gas)
}
inline void GrpcTransaction::set_gas(const char* value, size_t size) {
  
  gas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.gas)
}
inline ::std::string* GrpcTransaction::mutable_gas() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.gas)
  return gas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_gas() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.gas)
  
  return gas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_gas(::std::string* gas) {
  if (gas != NULL) {
    
  } else {
    
  }
  gas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.gas)
}

// string receiver = 6;
inline void GrpcTransaction::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::receiver() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.receiver)
  return receiver_.GetNoArena();
}
inline void GrpcTransaction::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.receiver)
}
#if LANG_CXX11
inline void GrpcTransaction::set_receiver(::std::string&& value) {
  
  receiver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.receiver)
}
#endif
inline void GrpcTransaction::set_receiver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.receiver)
}
inline void GrpcTransaction::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.receiver)
}
inline ::std::string* GrpcTransaction::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_receiver() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.receiver)
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.receiver)
}

// string signature = 7;
inline void GrpcTransaction::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::signature() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.signature)
  return signature_.GetNoArena();
}
inline void GrpcTransaction::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.signature)
}
#if LANG_CXX11
inline void GrpcTransaction::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.signature)
}
#endif
inline void GrpcTransaction::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.signature)
}
inline void GrpcTransaction::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.signature)
}
inline ::std::string* GrpcTransaction::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_signature() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.signature)
}

// bytes data = 8;
inline void GrpcTransaction::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GrpcTransaction::data() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.GrpcTransaction.data)
  return data_.GetNoArena();
}
inline void GrpcTransaction::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.GrpcTransaction.data)
}
#if LANG_CXX11
inline void GrpcTransaction::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.GrpcTransaction.data)
}
#endif
inline void GrpcTransaction::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.GrpcTransaction.data)
}
inline void GrpcTransaction::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.GrpcTransaction.data)
}
inline ::std::string* GrpcTransaction::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.GrpcTransaction.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GrpcTransaction::release_data() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.GrpcTransaction.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcTransaction::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.GrpcTransaction.data)
}

// -------------------------------------------------------------------

// SendGrpcTransactionResponse

// bool success = 1;
inline void SendGrpcTransactionResponse::clear_success() {
  success_ = false;
}
inline bool SendGrpcTransactionResponse::success() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.SendGrpcTransactionResponse.success)
  return success_;
}
inline void SendGrpcTransactionResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.SendGrpcTransactionResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace taraxa_ledger

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2ftransaction_2eproto
