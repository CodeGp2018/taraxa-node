// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/transaction.proto

#ifndef PROTOBUF_INCLUDED_proto_2ftransaction_2eproto
#define PROTOBUF_INCLUDED_proto_2ftransaction_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftransaction_2eproto 

namespace protobuf_proto_2ftransaction_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2ftransaction_2eproto
namespace taraxa_ledger {
class SendTransactionResponse;
class SendTransactionResponseDefaultTypeInternal;
extern SendTransactionResponseDefaultTypeInternal _SendTransactionResponse_default_instance_;
class Transaction;
class TransactionDefaultTypeInternal;
extern TransactionDefaultTypeInternal _Transaction_default_instance_;
}  // namespace taraxa_ledger
namespace google {
namespace protobuf {
template<> ::taraxa_ledger::SendTransactionResponse* Arena::CreateMaybeMessage<::taraxa_ledger::SendTransactionResponse>(Arena*);
template<> ::taraxa_ledger::Transaction* Arena::CreateMaybeMessage<::taraxa_ledger::Transaction>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace taraxa_ledger {

// ===================================================================

class Transaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_ledger.Transaction) */ {
 public:
  Transaction();
  virtual ~Transaction();

  Transaction(const Transaction& from);

  inline Transaction& operator=(const Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transaction(Transaction&& from) noexcept
    : Transaction() {
    *this = ::std::move(from);
  }

  inline Transaction& operator=(Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transaction* internal_default_instance() {
    return reinterpret_cast<const Transaction*>(
               &_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Transaction* other);
  friend void swap(Transaction& a, Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transaction* New() const final {
    return CreateMaybeMessage<Transaction>(NULL);
  }

  Transaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Transaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Transaction& from);
  void MergeFrom(const Transaction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string receiver = 6;
  void clear_receiver();
  static const int kReceiverFieldNumber = 6;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  #if LANG_CXX11
  void set_receiver(::std::string&& value);
  #endif
  void set_receiver(const char* value);
  void set_receiver(const char* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // string signature = 7;
  void clear_signature();
  static const int kSignatureFieldNumber = 7;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // bytes data = 8;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 nounce = 2;
  void clear_nounce();
  static const int kNounceFieldNumber = 2;
  ::google::protobuf::uint64 nounce() const;
  void set_nounce(::google::protobuf::uint64 value);

  // uint64 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // uint64 gas_price = 4;
  void clear_gas_price();
  static const int kGasPriceFieldNumber = 4;
  ::google::protobuf::uint64 gas_price() const;
  void set_gas_price(::google::protobuf::uint64 value);

  // uint64 gas = 5;
  void clear_gas();
  static const int kGasFieldNumber = 5;
  ::google::protobuf::uint64 gas() const;
  void set_gas(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:taraxa_ledger.Transaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 nounce_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint64 gas_price_;
  ::google::protobuf::uint64 gas_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftransaction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendTransactionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_ledger.SendTransactionResponse) */ {
 public:
  SendTransactionResponse();
  virtual ~SendTransactionResponse();

  SendTransactionResponse(const SendTransactionResponse& from);

  inline SendTransactionResponse& operator=(const SendTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendTransactionResponse(SendTransactionResponse&& from) noexcept
    : SendTransactionResponse() {
    *this = ::std::move(from);
  }

  inline SendTransactionResponse& operator=(SendTransactionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTransactionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const SendTransactionResponse*>(
               &_SendTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SendTransactionResponse* other);
  friend void swap(SendTransactionResponse& a, SendTransactionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendTransactionResponse* New() const final {
    return CreateMaybeMessage<SendTransactionResponse>(NULL);
  }

  SendTransactionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendTransactionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendTransactionResponse& from);
  void MergeFrom(const SendTransactionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendTransactionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:taraxa_ledger.SendTransactionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_2ftransaction_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Transaction

// uint32 type = 1;
inline void Transaction::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Transaction::type() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.type)
  return type_;
}
inline void Transaction::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.type)
}

// uint64 nounce = 2;
inline void Transaction::clear_nounce() {
  nounce_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Transaction::nounce() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.nounce)
  return nounce_;
}
inline void Transaction::set_nounce(::google::protobuf::uint64 value) {
  
  nounce_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.nounce)
}

// uint64 value = 3;
inline void Transaction::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Transaction::value() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.value)
  return value_;
}
inline void Transaction::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.value)
}

// uint64 gas_price = 4;
inline void Transaction::clear_gas_price() {
  gas_price_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Transaction::gas_price() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.gas_price)
  return gas_price_;
}
inline void Transaction::set_gas_price(::google::protobuf::uint64 value) {
  
  gas_price_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.gas_price)
}

// uint64 gas = 5;
inline void Transaction::clear_gas() {
  gas_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Transaction::gas() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.gas)
  return gas_;
}
inline void Transaction::set_gas(::google::protobuf::uint64 value) {
  
  gas_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.gas)
}

// string receiver = 6;
inline void Transaction::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transaction::receiver() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.receiver)
  return receiver_.GetNoArena();
}
inline void Transaction::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.receiver)
}
#if LANG_CXX11
inline void Transaction::set_receiver(::std::string&& value) {
  
  receiver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.Transaction.receiver)
}
#endif
inline void Transaction::set_receiver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.Transaction.receiver)
}
inline void Transaction::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.Transaction.receiver)
}
inline ::std::string* Transaction::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.Transaction.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transaction::release_receiver() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.Transaction.receiver)
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transaction::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.Transaction.receiver)
}

// string signature = 7;
inline void Transaction::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transaction::signature() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.signature)
  return signature_.GetNoArena();
}
inline void Transaction::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.signature)
}
#if LANG_CXX11
inline void Transaction::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.Transaction.signature)
}
#endif
inline void Transaction::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.Transaction.signature)
}
inline void Transaction::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.Transaction.signature)
}
inline ::std::string* Transaction::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.Transaction.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transaction::release_signature() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.Transaction.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transaction::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.Transaction.signature)
}

// bytes data = 8;
inline void Transaction::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transaction::data() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.Transaction.data)
  return data_.GetNoArena();
}
inline void Transaction::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_ledger.Transaction.data)
}
#if LANG_CXX11
inline void Transaction::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_ledger.Transaction.data)
}
#endif
inline void Transaction::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_ledger.Transaction.data)
}
inline void Transaction::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_ledger.Transaction.data)
}
inline ::std::string* Transaction::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_ledger.Transaction.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transaction::release_data() {
  // @@protoc_insertion_point(field_release:taraxa_ledger.Transaction.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transaction::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:taraxa_ledger.Transaction.data)
}

// -------------------------------------------------------------------

// SendTransactionResponse

// bool success = 1;
inline void SendTransactionResponse::clear_success() {
  success_ = false;
}
inline bool SendTransactionResponse::success() const {
  // @@protoc_insertion_point(field_get:taraxa_ledger.SendTransactionResponse.success)
  return success_;
}
inline void SendTransactionResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:taraxa_ledger.SendTransactionResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace taraxa_ledger

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2ftransaction_2eproto
